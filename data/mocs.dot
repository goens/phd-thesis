#dot2tex data/mocs.dot --figonly -t raw --output figures/mocs.tex
digraph G {
       root [texlbl = "\acsp{MoC}", label = "MoCs",style=dotted];
       seq [ label = "Sequential",style=dotted];
       concurrent [ label = "Concurrent",style=dotted];
       t [ label = "Timed",style=dotted];
       ut [ label = "Untimed",style=dotted];
       det [ label = "Deterministic",style=dotted];
       f [ label = "Functional",style=dotted];
       mu [ texlbl = "$\mu$-recursive Functions" label="mu-recursive Functions" , style=filled, fillcolor=olivedrab3];
       l [ texlbl = "$\lambda$-Calculus" label="l-Calculus", style=filled, fillcolor=olivedrab3];
       touring [ label = "Turing \n Machines", style=filled, fillcolor=olivedrab3];
       sm [ label = "State \n  Machines", style=filled, fillcolor=olivedrab3];
       pc [ label = "Process \n Calculi", style=filled, fillcolor=olivedrab3];
       pic [ texlbl = "$\Pi$-Calculus" label = "P-Calculus", style=filled, fillcolor=olivedrab3];
       csp [ label = "Communicating \n Sequential  \n Processes", style=filled, fillcolor=olivedrab3];
       petri [ label = "Petri Nets", style=filled, fillcolor=olivedrab3]; 
       df [ label = "Dataflow",style=dotted]; 
       threads [ label = "Threads", style=filled, fillcolor=olivedrab3]; 
       actors [ label = "Actor \n Model", style=filled, fillcolor=olivedrab3]; 
       sdf [ texlbl = "\acs{SDF}", label = "SDF", style=filled, fillcolor=cadetblue1]; 
       tg [ texlbl = "\acs{HSDF} / task graphs", label = "HSDF / task graphs", style=filled, fillcolor=cadetblue1]; 
       ddf [ texlbl = "\acs{DDF}",  label = "DDF", style=filled, fillcolor=olivedrab3];
       kpn [ texlbl = "\acs{KPN}", label = "KPN", style=filled, fillcolor=cadetblue1];
       sr [ label = "Synchronous/\n Reactive", style=filled, fillcolor=olivedrab3];
       de [ label = "Discrete \n Events", style=filled, fillcolor=olivedrab3];
       reactors [ label = "Reactors", style=filled, fillcolor=cadetblue1];

       root -> det;
       root -> concurrent;
       root -> t;
       det -> f;
       det -> seq;
       det -> kpn;
       det -> sdf;
       f -> l;
       f -> mu;
       seq -> touring;
       seq -> sm;
       concurrent -> ut;
       concurrent -> pc;
       concurrent -> sr;
       pc -> pic;
       pc -> csp;
       ut -> petri;
       ut -> df;
       ut -> threads;
       ut -> actors;
       df -> kpn;
       df -> sdf;
       df -> ddf;
       ddf -> sdf;
       sdf -> tg;
       #actors ->[style = 'dashed'] reactors;
       det -> reactors [ style = dashed ];
       t -> de;
       t -> reactors;
       t -> sr;
       sr -> de;
       de -> reactors;

      #formatting
      #pic -> t [ style = invis ];
      t -> kpn [ style = invis ];
      t -> seq [ style = invis ];
      seq -> f [ style = invis ];
      f ->  concurrent [ style = invis ];
      sr -> df [ style = invis ];
      pic -> ut [ style = invis ];
      #concurrent -> seq [ style = invis ];
}